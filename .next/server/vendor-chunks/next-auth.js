"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/next-auth";
exports.ids = ["vendor-chunks/next-auth"];
exports.modules = {

/***/ "(ssr)/./node_modules/next-auth/client/_utils.js":
/*!*************************************************!*\
  !*** ./node_modules/next-auth/client/_utils.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(ssr)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.BroadcastChannel = BroadcastChannel;\nexports.apiBaseUrl = apiBaseUrl;\nexports.fetchData = fetchData;\nexports.now = now;\nvar _regenerator = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/regenerator */ \"(ssr)/./node_modules/@babel/runtime/regenerator/index.js\"));\nvar _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/defineProperty.js\"));\nvar _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"(ssr)/./node_modules/@babel/runtime/helpers/asyncToGenerator.js\"));\nfunction ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(object);\n        enumerableOnly && (symbols = symbols.filter(function(sym) {\n            return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        })), keys.push.apply(keys, symbols);\n    }\n    return keys;\n}\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = null != arguments[i] ? arguments[i] : {};\n        i % 2 ? ownKeys(Object(source), !0).forEach(function(key) {\n            (0, _defineProperty2.default)(target, key, source[key]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n    }\n    return target;\n}\nfunction fetchData(_x, _x2, _x3) {\n    return _fetchData.apply(this, arguments);\n}\nfunction _fetchData() {\n    _fetchData = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee(path, __NEXTAUTH, logger) {\n        var _ref, ctx, _ref$req, req, url, _req$headers, options, res, data, _args = arguments;\n        return _regenerator.default.wrap(function _callee$(_context) {\n            while(1){\n                switch(_context.prev = _context.next){\n                    case 0:\n                        _ref = _args.length > 3 && _args[3] !== undefined ? _args[3] : {}, ctx = _ref.ctx, _ref$req = _ref.req, req = _ref$req === void 0 ? ctx === null || ctx === void 0 ? void 0 : ctx.req : _ref$req;\n                        url = \"\".concat(apiBaseUrl(__NEXTAUTH), \"/\").concat(path);\n                        _context.prev = 2;\n                        options = {\n                            headers: _objectSpread({\n                                \"Content-Type\": \"application/json\"\n                            }, req !== null && req !== void 0 && (_req$headers = req.headers) !== null && _req$headers !== void 0 && _req$headers.cookie ? {\n                                cookie: req.headers.cookie\n                            } : {})\n                        };\n                        if (req !== null && req !== void 0 && req.body) {\n                            options.body = JSON.stringify(req.body);\n                            options.method = \"POST\";\n                        }\n                        _context.next = 7;\n                        return fetch(url, options);\n                    case 7:\n                        res = _context.sent;\n                        _context.next = 10;\n                        return res.json();\n                    case 10:\n                        data = _context.sent;\n                        if (res.ok) {\n                            _context.next = 13;\n                            break;\n                        }\n                        throw data;\n                    case 13:\n                        return _context.abrupt(\"return\", Object.keys(data).length > 0 ? data : null);\n                    case 16:\n                        _context.prev = 16;\n                        _context.t0 = _context[\"catch\"](2);\n                        logger.error(\"CLIENT_FETCH_ERROR\", {\n                            error: _context.t0,\n                            url: url\n                        });\n                        return _context.abrupt(\"return\", null);\n                    case 20:\n                    case \"end\":\n                        return _context.stop();\n                }\n            }\n        }, _callee, null, [\n            [\n                2,\n                16\n            ]\n        ]);\n    }));\n    return _fetchData.apply(this, arguments);\n}\nfunction apiBaseUrl(__NEXTAUTH) {\n    if (true) {\n        return \"\".concat(__NEXTAUTH.baseUrlServer).concat(__NEXTAUTH.basePathServer);\n    }\n    return __NEXTAUTH.basePath;\n}\nfunction now() {\n    return Math.floor(Date.now() / 1000);\n}\nfunction BroadcastChannel() {\n    var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"nextauth.message\";\n    return {\n        receive: function receive(onReceive) {\n            var handler = function handler(event) {\n                var _event$newValue;\n                if (event.key !== name) return;\n                var message = JSON.parse((_event$newValue = event.newValue) !== null && _event$newValue !== void 0 ? _event$newValue : \"{}\");\n                if ((message === null || message === void 0 ? void 0 : message.event) !== \"session\" || !(message !== null && message !== void 0 && message.data)) return;\n                onReceive(message);\n            };\n            window.addEventListener(\"storage\", handler);\n            return function() {\n                return window.removeEventListener(\"storage\", handler);\n            };\n        },\n        post: function post(message) {\n            if (true) return;\n            try {\n                localStorage.setItem(name, JSON.stringify(_objectSpread(_objectSpread({}, message), {}, {\n                    timestamp: now()\n                })));\n            } catch (_unused) {}\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NsaWVudC9fdXRpbHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYixJQUFJQSx5QkFBeUJDLG1CQUFPQSxDQUFDLDBIQUE4QztBQUVuRkMsOENBQTZDO0lBQzNDRyxPQUFPO0FBQ1QsQ0FBQyxFQUFDO0FBQ0ZELHdCQUF3QixHQUFHRTtBQUMzQkYsa0JBQWtCLEdBQUdHO0FBQ3JCSCxpQkFBaUIsR0FBR0k7QUFDcEJKLFdBQVcsR0FBR0s7QUFFZCxJQUFJQyxlQUFlVix1QkFBdUJDLG1CQUFPQSxDQUFDLDRGQUE0QjtBQUU5RSxJQUFJVSxtQkFBbUJYLHVCQUF1QkMsbUJBQU9BLENBQUMsNEdBQXVDO0FBRTdGLElBQUlXLHFCQUFxQlosdUJBQXVCQyxtQkFBT0EsQ0FBQyxnSEFBeUM7QUFFakcsU0FBU1ksUUFBUUMsTUFBTSxFQUFFQyxjQUFjO0lBQUksSUFBSUMsT0FBT2QsT0FBT2MsSUFBSSxDQUFDRjtJQUFTLElBQUlaLE9BQU9lLHFCQUFxQixFQUFFO1FBQUUsSUFBSUMsVUFBVWhCLE9BQU9lLHFCQUFxQixDQUFDSDtRQUFTQyxrQkFBbUJHLENBQUFBLFVBQVVBLFFBQVFDLE1BQU0sQ0FBQyxTQUFVQyxHQUFHO1lBQUksT0FBT2xCLE9BQU9tQix3QkFBd0IsQ0FBQ1AsUUFBUU0sS0FBS0UsVUFBVTtRQUFFLEVBQUMsR0FBSU4sS0FBS08sSUFBSSxDQUFDQyxLQUFLLENBQUNSLE1BQU1FO0lBQVU7SUFBRSxPQUFPRjtBQUFNO0FBRXBWLFNBQVNTLGNBQWNDLE1BQU07SUFBSSxJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSUMsVUFBVUMsTUFBTSxFQUFFRixJQUFLO1FBQUUsSUFBSUcsU0FBUyxRQUFRRixTQUFTLENBQUNELEVBQUUsR0FBR0MsU0FBUyxDQUFDRCxFQUFFLEdBQUcsQ0FBQztRQUFHQSxJQUFJLElBQUlkLFFBQVFYLE9BQU80QixTQUFTLENBQUMsR0FBR0MsT0FBTyxDQUFDLFNBQVVDLEdB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QUtBLFFBQVFuQyxJQUFJLEdBQUc7Z0JBQ2xKK0IsVUFBVUk7WUFDWjtZQUVBRyxPQUFPQyxnQkFBZ0IsQ0FBQyxXQUFXUDtZQUNuQyxPQUFPO2dCQUNMLE9BQU9NLE9BQU9FLG1CQUFtQixDQUFDLFdBQVdSO1lBQy9DO1FBQ0Y7UUFDQVMsTUFBTSxTQUFTQSxLQUFLTixPQUFPO1lBQ3pCLElBQUksSUFBNkIsRUFBRTtZQUVuQyxJQUFJO2dCQUNGTyxhQUFhQyxPQUFPLENBQUNkLE1BQU1qQixLQUFLQyxTQUFTLENBQUN6QyxjQUFjQSxjQUFjLENBQUMsR0FBRytELFVBQVUsQ0FBQyxHQUFHO29CQUN0RlMsV0FBV3hGO2dCQUNiO1lBQ0YsRUFBRSxPQUFPeUYsU0FBUyxDQUFDO1FBQ3JCO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2hhbG9jaGF0Ly4vbm9kZV9tb2R1bGVzL25leHQtYXV0aC9jbGllbnQvX3V0aWxzLmpzPzBkYTIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0ID0gcmVxdWlyZShcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW50ZXJvcFJlcXVpcmVEZWZhdWx0XCIpO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5Ccm9hZGNhc3RDaGFubmVsID0gQnJvYWRjYXN0Q2hhbm5lbDtcbmV4cG9ydHMuYXBpQmFzZVVybCA9IGFwaUJhc2VVcmw7XG5leHBvcnRzLmZldGNoRGF0YSA9IGZldGNoRGF0YTtcbmV4cG9ydHMubm93ID0gbm93O1xuXG52YXIgX3JlZ2VuZXJhdG9yID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiQGJhYmVsL3J1bnRpbWUvcmVnZW5lcmF0b3JcIikpO1xuXG52YXIgX2RlZmluZVByb3BlcnR5MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZGVmaW5lUHJvcGVydHlcIikpO1xuXG52YXIgX2FzeW5jVG9HZW5lcmF0b3IyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hc3luY1RvR2VuZXJhdG9yXCIpKTtcblxuZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGVudW1lcmFibGVPbmx5ICYmIChzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTsgfSkpLCBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH1cblxuZnVuY3Rpb24gX29iamVjdFNwcmVhZCh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IG51bGwgIT0gYXJndW1lbnRzW2ldID8gYXJndW1lbnRzW2ldIDoge307IGkgJSAyID8gb3duS2V5cyhPYmplY3Qoc291cmNlKSwgITApLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyAoMCwgX2RlZmluZVByb3BlcnR5Mi5kZWZhdWx0KSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KSA6IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzID8gT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKSA6IG93bktleXMoT2JqZWN0KHNvdXJjZSkpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsgfSk7IH0gcmV0dXJuIHRhcmdldDsgfVxuXG5mdW5jdGlvbiBmZXRjaERhdGEoX3gsIF94MiwgX3gzKSB7XG4gIHJldHVybiBfZmV0Y2hEYXRhLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59XG5cbmZ1bmN0aW9uIF9mZXRjaERhdGEoKSB7XG4gIF9mZXRjaERhdGEgPSAoMCwgX2FzeW5jVG9HZW5lcmF0b3IyLmRlZmF1bHQpKF9yZWdlbmVyYXRvci5kZWZhdWx0Lm1hcmsoZnVuY3Rpb24gX2NhbGxlZShwYXRoLCBfX05FWFRBVVRILCBsb2dnZXIpIHtcbiAgICB2YXIgX3JlZixcbiAgICAgICAgY3R4LFxuICAgICAgICBfcmVmJHJlcSxcbiAgICAgICAgcmVxLFxuICAgICAgICB1cmwsXG4gICAgICAgIF9yZXEkaGVhZGVycyxcbiAgICAgICAgb3B0aW9ucyxcbiAgICAgICAgcmVzLFxuICAgICAgICBkYXRhLFxuICAgICAgICBfYXJncyA9IGFyZ3VtZW50cztcblxuICAgIHJldHVybiBfcmVnZW5lcmF0b3IuZGVmYXVsdC53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7XG4gICAgICB3aGlsZSAoMSkge1xuICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7XG4gICAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgX3JlZiA9IF9hcmdzLmxlbmd0aCA+IDMgJiYgX2FyZ3NbM10gIT09IHVuZGVmaW5lZCA/IF9hcmdzWzNdIDoge30sIGN0eCA9IF9yZWYuY3R4LCBfcmVmJHJlcSA9IF9yZWYucmVxLCByZXEgPSBfcmVmJHJlcSA9PT0gdm9pZCAwID8gY3R4ID09PSBudWxsIHx8IGN0eCA9PT0gdm9pZCAwID8gdm9pZCAwIDogY3R4LnJlcSA6IF9yZWYkcmVxO1xuICAgICAgICAgICAgdXJsID0gXCJcIi5jb25jYXQoYXBpQmFzZVVybChfX05FWFRBVVRIKSwgXCIvXCIpLmNvbmNhdChwYXRoKTtcbiAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAyO1xuICAgICAgICAgICAgb3B0aW9ucyA9IHtcbiAgICAgICAgICAgICAgaGVhZGVyczogX29iamVjdFNwcmVhZCh7XG4gICAgICAgICAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCJcbiAgICAgICAgICAgICAgfSwgcmVxICE9PSBudWxsICYmIHJlcSAhPT0gdm9pZCAwICYmIChfcmVxJGhlYWRlcnMgPSByZXEuaGVhZGVycykgIT09IG51bGwgJiYgX3JlcSRoZWFkZXJzICE9PSB2b2lkIDAgJiYgX3JlcSRoZWFkZXJzLmNvb2tpZSA/IHtcbiAgICAgICAgICAgICAgICBjb29raWU6IHJlcS5oZWFkZXJzLmNvb2tpZVxuICAgICAgICAgICAgICB9IDoge30pXG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICBpZiAocmVxICE9PSBudWxsICYmIHJlcSAhPT0gdm9pZCAwICYmIHJlcS5ib2R5KSB7XG4gICAgICAgICAgICAgIG9wdGlvbnMuYm9keSA9IEpTT04uc3RyaW5naWZ5KHJlcS5ib2R5KTtcbiAgICAgICAgICAgICAgb3B0aW9ucy5tZXRob2QgPSBcIlBPU1RcIjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDc7XG4gICAgICAgICAgICByZXR1cm4gZmV0Y2godXJsLCBvcHRpb25zKTtcblxuICAgICAgICAgIGNhc2UgNzpcbiAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0LnNlbnQ7XG4gICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTA7XG4gICAgICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcblxuICAgICAgICAgIGNhc2UgMTA6XG4gICAgICAgICAgICBkYXRhID0gX2NvbnRleHQuc2VudDtcblxuICAgICAgICAgICAgaWYgKHJlcy5vaykge1xuICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTM7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB0aHJvdyBkYXRhO1xuXG4gICAgICAgICAgY2FzZSAxMzpcbiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoXCJyZXR1cm5cIiwgT2JqZWN0LmtleXMoZGF0YSkubGVuZ3RoID4gMCA/IGRhdGEgOiBudWxsKTtcblxuICAgICAgICAgIGNhc2UgMTY6XG4gICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTY7XG4gICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0W1wiY2F0Y2hcIl0oMik7XG4gICAgICAgICAgICBsb2dnZXIuZXJyb3IoXCJDTElFTlRfRkVUQ0hfRVJST1JcIiwge1xuICAgICAgICAgICAgICBlcnJvcjogX2NvbnRleHQudDAsXG4gICAgICAgICAgICAgIHVybDogdXJsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoXCJyZXR1cm5cIiwgbnVsbCk7XG5cbiAgICAgICAgICBjYXNlIDIwOlxuICAgICAgICAgIGNhc2UgXCJlbmRcIjpcbiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzIsIDE2XV0pO1xuICB9KSk7XG4gIHJldHVybiBfZmV0Y2hEYXRhLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59XG5cbmZ1bmN0aW9uIGFwaUJhc2VVcmwoX19ORVhUQVVUSCkge1xuICBpZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHJldHVybiBcIlwiLmNvbmNhdChfX05FWFRBVVRILmJhc2VVcmxTZXJ2ZXIpLmNvbmNhdChfX05FWFRBVVRILmJhc2VQYXRoU2VydmVyKTtcbiAgfVxuXG4gIHJldHVybiBfX05FWFRBVVRILmJhc2VQYXRoO1xufVxuXG5mdW5jdGlvbiBub3coKSB7XG4gIHJldHVybiBNYXRoLmZsb29yKERhdGUubm93KCkgLyAxMDAwKTtcbn1cblxuZnVuY3Rpb24gQnJvYWRjYXN0Q2hhbm5lbCgpIHtcbiAgdmFyIG5hbWUgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IFwibmV4dGF1dGgubWVzc2FnZVwiO1xuICByZXR1cm4ge1xuICAgIHJlY2VpdmU6IGZ1bmN0aW9uIHJlY2VpdmUob25SZWNlaXZlKSB7XG4gICAgICB2YXIgaGFuZGxlciA9IGZ1bmN0aW9uIGhhbmRsZXIoZXZlbnQpIHtcbiAgICAgICAgdmFyIF9ldmVudCRuZXdWYWx1ZTtcblxuICAgICAgICBpZiAoZXZlbnQua2V5ICE9PSBuYW1lKSByZXR1cm47XG4gICAgICAgIHZhciBtZXNzYWdlID0gSlNPTi5wYXJzZSgoX2V2ZW50JG5ld1ZhbHVlID0gZXZlbnQubmV3VmFsdWUpICE9PSBudWxsICYmIF9ldmVudCRuZXdWYWx1ZSAhPT0gdm9pZCAwID8gX2V2ZW50JG5ld1ZhbHVlIDogXCJ7fVwiKTtcbiAgICAgICAgaWYgKChtZXNzYWdlID09PSBudWxsIHx8IG1lc3NhZ2UgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG1lc3NhZ2UuZXZlbnQpICE9PSBcInNlc3Npb25cIiB8fCAhKG1lc3NhZ2UgIT09IG51bGwgJiYgbWVzc2FnZSAhPT0gdm9pZCAwICYmIG1lc3NhZ2UuZGF0YSkpIHJldHVybjtcbiAgICAgICAgb25SZWNlaXZlKG1lc3NhZ2UpO1xuICAgICAgfTtcblxuICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJzdG9yYWdlXCIsIGhhbmRsZXIpO1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwic3RvcmFnZVwiLCBoYW5kbGVyKTtcbiAgICAgIH07XG4gICAgfSxcbiAgICBwb3N0OiBmdW5jdGlvbiBwb3N0KG1lc3NhZ2UpIHtcbiAgICAgIGlmICh0eXBlb2Ygd2luZG93ID09PSBcInVuZGVmaW5lZFwiKSByZXR1cm47XG5cbiAgICAgIHRyeSB7XG4gICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKG5hbWUsIEpTT04uc3RyaW5naWZ5KF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgbWVzc2FnZSksIHt9LCB7XG4gICAgICAgICAgdGltZXN0YW1wOiBub3coKVxuICAgICAgICB9KSkpO1xuICAgICAgfSBjYXRjaCAoX3VudXNlZCkge31cbiAgICB9XG4gIH07XG59Il0sIm5hbWVzIjpbIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJCcm9hZGNhc3RDaGFubmVsIiwiYXBpQmFzZVVybCIsImZldGNoRGF0YSIsIm5vdyIsIl9yZWdlbmVyYXRvciIsIl9kZWZpbmVQcm9wZXJ0eTIiLCJfYXN5bmNUb0dlbmVyYXRvcjIiLCJvd25LZXlzIiwib2JqZWN0IiwiZW51bWVyYWJsZU9ubHkiLCJrZXlzIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwic3ltYm9scyIsImZpbHRlciIsInN5bSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImVudW1lcmFibGUiLCJwdXNoIiwiYXBwbHkiLCJfb2JqZWN0U3ByZWFkIiwidGFyZ2V0IiwiaSIsImFyZ3VtZW50cyIsImxlbmd0aCIsInNvdXJjZSIsImZvckVhY2giLCJrZXkiLCJkZWZhdWx0IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyIsImRlZmluZVByb3BlcnRpZXMiLCJfeCIsIl94MiIsIl94MyIsIl9mZXRjaERhdGEiLCJtYXJrIiwiX2NhbGxlZSIsInBhdGgiLCJfX05FWFRBVVRIIiwibG9nZ2VyIiwiX3JlZiIsImN0eCIsIl9yZWYkcmVxIiwicmVxIiwidXJsIiwiX3JlcSRoZWFkZXJzIiwib3B0aW9ucyIsInJlcyIsImRhdGEiLCJfYXJncyIsIndyYXAiLCJfY2FsbGVlJCIsIl9jb250ZXh0IiwicHJldiIsIm5leHQiLCJ1bmRlZmluZWQiLCJjb25jYXQiLCJoZWFkZXJzIiwiY29va2llIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJtZXRob2QiLCJmZXRjaCIsInNlbnQiLCJqc29uIiwib2siLCJhYnJ1cHQiLCJ0MCIsImVycm9yIiwic3RvcCIsImJhc2VVcmxTZXJ2ZXIiLCJiYXNlUGF0aFNlcnZlciIsImJhc2VQYXRoIiwiTWF0aCIsImZsb29yIiwiRGF0ZSIsIm5hbWUiLCJyZWNlaXZlIiwib25SZWNlaXZlIiwiaGFuZGxlciIsImV2ZW50IiwiX2V2ZW50JG5ld1ZhbHVlIiwibWVzc2FnZSIsInBhcnNlIiwibmV3VmFsdWUiLCJ3aW5kb3ciLCJhZGRFdmVudExpc3RlbmVyIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsInBvc3QiLCJsb2NhbFN0b3JhZ2UiLCJzZXRJdGVtIiwidGltZXN0YW1wIiwiX3VudXNlZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next-auth/client/_utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/next-auth/core/errors.js":
/*!***********************************************!*\
  !*** ./node_modules/next-auth/core/errors.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(ssr)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.UnsupportedStrategy = exports.UnknownError = exports.OAuthCallbackError = exports.MissingSecret = exports.MissingAuthorize = exports.MissingAdapterMethods = exports.MissingAdapter = exports.MissingAPIRoute = exports.InvalidCallbackUrl = exports.AccountNotLinkedError = void 0;\nexports.adapterErrorHandler = adapterErrorHandler;\nexports.capitalize = capitalize;\nexports.eventsErrorHandler = eventsErrorHandler;\nexports.upperSnake = upperSnake;\nvar _regenerator = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/regenerator */ \"(ssr)/./node_modules/@babel/runtime/regenerator/index.js\"));\nvar _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"(ssr)/./node_modules/@babel/runtime/helpers/asyncToGenerator.js\"));\nvar _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ \"(ssr)/./node_modules/@babel/runtime/helpers/assertThisInitialized.js\"));\nvar _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/defineProperty.js\"));\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"(ssr)/./node_modules/@babel/runtime/helpers/classCallCheck.js\"));\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ \"(ssr)/./node_modules/@babel/runtime/helpers/createClass.js\"));\nvar _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ \"(ssr)/./node_modules/@babel/runtime/helpers/inherits.js\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"(ssr)/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\"));\nvar _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"(ssr)/./node_modules/@babel/runtime/helpers/getPrototypeOf.js\"));\nvar _wrapNativeSuper2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/wrapNativeSuper */ \"(ssr)/./node_modules/@babel/runtime/helpers/wrapNativeSuper.js\"));\nfunction _createSuper(Derived) {\n    var hasNativeReflectConstruct = _isNativeReflectConstruct();\n    return function _createSuperInternal() {\n        var Super = (0, _getPrototypeOf2.default)(Derived), result;\n        if (hasNativeReflectConstruct) {\n            var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n            result = Reflect.construct(Super, arguments, NewTarget);\n        } else {\n            result = Super.apply(this, arguments);\n        }\n        return (0, _possibleConstructorReturn2.default)(this, result);\n    };\n}\nfunction _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n    try {\n        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\nvar UnknownError = function(_Error) {\n    (0, _inherits2.default)(UnknownError, _Error);\n    var _super = _createSuper(UnknownError);\n    function UnknownError(error) {\n        var _message;\n        var _this;\n        (0, _classCallCheck2.default)(this, UnknownError);\n        _this = _super.call(this, (_message = error === null || error === void 0 ? void 0 : error.message) !== null && _message !== void 0 ? _message : error);\n        _this.name = \"UnknownError\";\n        _this.code = error.code;\n        if (error instanceof Error) {\n            _this.stack = error.stack;\n        }\n        return _this;\n    }\n    (0, _createClass2.default)(UnknownError, [\n        {\n            key: \"toJSON\",\n            value: function toJSON() {\n                return {\n                    name: this.name,\n                    message: this.message,\n                    stack: this.stack\n                };\n            }\n        }\n    ]);\n    return UnknownError;\n}((0, _wrapNativeSuper2.default)(Error));\nexports.UnknownError = UnknownError;\nvar OAuthCallbackError = function(_UnknownError) {\n    (0, _inherits2.default)(OAuthCallbackError, _UnknownError);\n    var _super2 = _createSuper(OAuthCallbackError);\n    function OAuthCallbackError() {\n        var _this2;\n        (0, _classCallCheck2.default)(this, OAuthCallbackError);\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        _this2 = _super2.call.apply(_super2, [\n            this\n        ].concat(args));\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this2), \"name\", \"OAuthCallbackError\");\n        return _this2;\n    }\n    return (0, _createClass2.default)(OAuthCallbackError);\n}(UnknownError);\nexports.OAuthCallbackError = OAuthCallbackError;\nvar AccountNotLinkedError = function(_UnknownError2) {\n    (0, _inherits2.default)(AccountNotLinkedError, _UnknownError2);\n    var _super3 = _createSuper(AccountNotLinkedError);\n    function AccountNotLinkedError() {\n        var _this3;\n        (0, _classCallCheck2.default)(this, AccountNotLinkedError);\n        for(var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++){\n            args[_key2] = arguments[_key2];\n        }\n        _this3 = _super3.call.apply(_super3, [\n            this\n        ].concat(args));\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this3), \"name\", \"AccountNotLinkedError\");\n        return _this3;\n    }\n    return (0, _createClass2.default)(AccountNotLinkedError);\n}(UnknownError);\nexports.AccountNotLinkedError = AccountNotLinkedError;\nvar MissingAPIRoute = function(_UnknownError3) {\n    (0, _inherits2.default)(MissingAPIRoute, _UnknownError3);\n    var _super4 = _createSuper(MissingAPIRoute);\n    function MissingAPIRoute() {\n        var _this4;\n        (0, _classCallCheck2.default)(this, MissingAPIRoute);\n        for(var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++){\n            args[_key3] = arguments[_key3];\n        }\n        _this4 = _super4.call.apply(_super4, [\n            this\n        ].concat(args));\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this4), \"name\", \"MissingAPIRouteError\");\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this4), \"code\", \"MISSING_NEXTAUTH_API_ROUTE_ERROR\");\n        return _this4;\n    }\n    return (0, _createClass2.default)(MissingAPIRoute);\n}(UnknownError);\nexports.MissingAPIRoute = MissingAPIRoute;\nvar MissingSecret = function(_UnknownError4) {\n    (0, _inherits2.default)(MissingSecret, _UnknownError4);\n    var _super5 = _createSuper(MissingSecret);\n    function MissingSecret() {\n        var _this5;\n        (0, _classCallCheck2.default)(this, MissingSecret);\n        for(var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++){\n            args[_key4] = arguments[_key4];\n        }\n        _this5 = _super5.call.apply(_super5, [\n            this\n        ].concat(args));\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this5), \"name\", \"MissingSecretError\");\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this5), \"code\", \"NO_SECRET\");\n        return _this5;\n    }\n    return (0, _createClass2.default)(MissingSecret);\n}(UnknownError);\nexports.MissingSecret = MissingSecret;\nvar MissingAuthorize = function(_UnknownError5) {\n    (0, _inherits2.default)(MissingAuthorize, _UnknownError5);\n    var _super6 = _createSuper(MissingAuthorize);\n    function MissingAuthorize() {\n        var _this6;\n        (0, _classCallCheck2.default)(this, MissingAuthorize);\n        for(var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++){\n            args[_key5] = arguments[_key5];\n        }\n        _this6 = _super6.call.apply(_super6, [\n            this\n        ].concat(args));\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this6), \"name\", \"MissingAuthorizeError\");\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this6), \"code\", \"CALLBACK_CREDENTIALS_HANDLER_ERROR\");\n        return _this6;\n    }\n    return (0, _createClass2.default)(MissingAuthorize);\n}(UnknownError);\nexports.MissingAuthorize = MissingAuthorize;\nvar MissingAdapter = function(_UnknownError6) {\n    (0, _inherits2.default)(MissingAdapter, _UnknownError6);\n    var _super7 = _createSuper(MissingAdapter);\n    function MissingAdapter() {\n        var _this7;\n        (0, _classCallCheck2.default)(this, MissingAdapter);\n        for(var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++){\n            args[_key6] = arguments[_key6];\n        }\n        _this7 = _super7.call.apply(_super7, [\n            this\n        ].concat(args));\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this7), \"name\", \"MissingAdapterError\");\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this7), \"code\", \"EMAIL_REQUIRES_ADAPTER_ERROR\");\n        return _this7;\n    }\n    return (0, _createClass2.default)(MissingAdapter);\n}(UnknownError);\nexports.MissingAdapter = MissingAdapter;\nvar MissingAdapterMethods = function(_UnknownError7) {\n    (0, _inherits2.default)(MissingAdapterMethods, _UnknownError7);\n    var _super8 = _createSuper(MissingAdapterMethods);\n    function MissingAdapterMethods() {\n        var _this8;\n        (0, _classCallCheck2.default)(this, MissingAdapterMethods);\n        for(var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++){\n            args[_key7] = arguments[_key7];\n        }\n        _this8 = _super8.call.apply(_super8, [\n            this\n        ].concat(args));\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this8), \"name\", \"MissingAdapterMethodsError\");\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this8), \"code\", \"MISSING_ADAPTER_METHODS_ERROR\");\n        return _this8;\n    }\n    return (0, _createClass2.default)(MissingAdapterMethods);\n}(UnknownError);\nexports.MissingAdapterMethods = MissingAdapterMethods;\nvar UnsupportedStrategy = function(_UnknownError8) {\n    (0, _inherits2.default)(UnsupportedStrategy, _UnknownError8);\n    var _super9 = _createSuper(UnsupportedStrategy);\n    function UnsupportedStrategy() {\n        var _this9;\n        (0, _classCallCheck2.default)(this, UnsupportedStrategy);\n        for(var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++){\n            args[_key8] = arguments[_key8];\n        }\n        _this9 = _super9.call.apply(_super9, [\n            this\n        ].concat(args));\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this9), \"name\", \"UnsupportedStrategyError\");\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this9), \"code\", \"CALLBACK_CREDENTIALS_JWT_ERROR\");\n        return _this9;\n    }\n    return (0, _createClass2.default)(UnsupportedStrategy);\n}(UnknownError);\nexports.UnsupportedStrategy = UnsupportedStrategy;\nvar InvalidCallbackUrl = function(_UnknownError9) {\n    (0, _inherits2.default)(InvalidCallbackUrl, _UnknownError9);\n    var _super10 = _createSuper(InvalidCallbackUrl);\n    function InvalidCallbackUrl() {\n        var _this10;\n        (0, _classCallCheck2.default)(this, InvalidCallbackUrl);\n        for(var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++){\n            args[_key9] = arguments[_key9];\n        }\n        _this10 = _super10.call.apply(_super10, [\n            this\n        ].concat(args));\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this10), \"name\", \"InvalidCallbackUrl\");\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this10), \"code\", \"INVALID_CALLBACK_URL_ERROR\");\n        return _this10;\n    }\n    return (0, _createClass2.default)(InvalidCallbackUrl);\n}(UnknownError);\nexports.InvalidCallbackUrl = InvalidCallbackUrl;\nfunction upperSnake(s) {\n    return s.replace(/([A-Z])/g, \"_$1\").toUpperCase();\n}\nfunction capitalize(s) {\n    return \"\".concat(s[0].toUpperCase()).concat(s.slice(1));\n}\nfunction eventsErrorHandler(methods, logger) {\n    return Object.keys(methods).reduce(function(acc, name) {\n        acc[name] = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee() {\n            var method, _args = arguments;\n            return _regenerator.default.wrap(function _callee$(_context) {\n                while(1){\n                    switch(_context.prev = _context.next){\n                        case 0:\n                            _context.prev = 0;\n                            method = methods[name];\n                            _context.next = 4;\n                            return method.apply(void 0, _args);\n                        case 4:\n                            return _context.abrupt(\"return\", _context.sent);\n                        case 7:\n                            _context.prev = 7;\n                            _context.t0 = _context[\"catch\"](0);\n                            logger.error(\"\".concat(upperSnake(name), \"_EVENT_ERROR\"), _context.t0);\n                        case 10:\n                        case \"end\":\n                            return _context.stop();\n                    }\n                }\n            }, _callee, null, [\n                [\n                    0,\n                    7\n                ]\n            ]);\n        }));\n        return acc;\n    }, {});\n}\nfunction adapterErrorHandler(adapter, logger) {\n    if (!adapter) return;\n    return Object.keys(adapter).reduce(function(acc, name) {\n        acc[name] = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee2() {\n            var _len10, args, _key10, method, e, _args2 = arguments;\n            return _regenerator.default.wrap(function _callee2$(_context2) {\n                while(1){\n                    switch(_context2.prev = _context2.next){\n                        case 0:\n                            _context2.prev = 0;\n                            for(_len10 = _args2.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++){\n                                args[_key10] = _args2[_key10];\n                            }\n                            logger.debug(\"adapter_\".concat(name), {\n                                args: args\n                            });\n                            method = adapter[name];\n                            _context2.next = 6;\n                            return method.apply(void 0, args);\n                        case 6:\n                            return _context2.abrupt(\"return\", _context2.sent);\n                        case 9:\n                            _context2.prev = 9;\n                            _context2.t0 = _context2[\"catch\"](0);\n                            logger.error(\"adapter_error_\".concat(name), _context2.t0);\n                            e = new UnknownError(_context2.t0);\n                            e.name = \"\".concat(capitalize(name), \"Error\");\n                            throw e;\n                        case 15:\n                        case \"end\":\n                            return _context2.stop();\n                    }\n                }\n            }, _callee2, null, [\n                [\n                    0,\n                    9\n                ]\n            ]);\n        }));\n        return acc;\n    }, {});\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next-auth/core/errors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/next-auth/react/index.js":
/*!***********************************************!*\
  !*** ./node_modules/next-auth/react/index.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(ssr)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nvar _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ \"(ssr)/./node_modules/@babel/runtime/helpers/typeof.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nvar _exportNames = {\n    SessionContext: true,\n    useSession: true,\n    getSession: true,\n    getCsrfToken: true,\n    getProviders: true,\n    signIn: true,\n    signOut: true,\n    SessionProvider: true\n};\nexports.SessionContext = void 0;\nexports.SessionProvider = SessionProvider;\nexports.getCsrfToken = getCsrfToken;\nexports.getProviders = getProviders;\nexports.getSession = getSession;\nexports.signIn = signIn;\nexports.signOut = signOut;\nexports.useSession = useSession;\nvar _regenerator = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/regenerator */ \"(ssr)/./node_modules/@babel/runtime/regenerator/index.js\"));\nvar _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/defineProperty.js\"));\nvar _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"(ssr)/./node_modules/@babel/runtime/helpers/asyncToGenerator.js\"));\nvar _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ \"(ssr)/./node_modules/@babel/runtime/helpers/slicedToArray.js\"));\nvar React = _interopRequireWildcard(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar _logger2 = _interopRequireWildcard(__webpack_require__(/*! ../utils/logger */ \"(ssr)/./node_modules/next-auth/utils/logger.js\"));\nvar _parseUrl = _interopRequireDefault(__webpack_require__(/*! ../utils/parse-url */ \"(ssr)/./node_modules/next-auth/utils/parse-url.js\"));\nvar _utils = __webpack_require__(/*! ../client/_utils */ \"(ssr)/./node_modules/next-auth/client/_utils.js\");\nvar _jsxRuntime = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\nvar _types = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/next-auth/react/types.js\");\nObject.keys(_types).forEach(function(key) {\n    if (key === \"default\" || key === \"__esModule\") return;\n    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n    if (key in exports && exports[key] === _types[key]) return;\n    Object.defineProperty(exports, key, {\n        enumerable: true,\n        get: function get() {\n            return _types[key];\n        }\n    });\n});\nvar _process$env$NEXTAUTH, _ref, _process$env$NEXTAUTH2, _process$env$NEXTAUTH3, _React$createContext;\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nfunction ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(object);\n        enumerableOnly && (symbols = symbols.filter(function(sym) {\n            return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        })), keys.push.apply(keys, symbols);\n    }\n    return keys;\n}\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = null != arguments[i] ? arguments[i] : {};\n        i % 2 ? ownKeys(Object(source), !0).forEach(function(key) {\n            (0, _defineProperty2.default)(target, key, source[key]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n    }\n    return target;\n}\nvar __NEXTAUTH = {\n    baseUrl: (0, _parseUrl.default)((_process$env$NEXTAUTH = process.env.NEXTAUTH_URL) !== null && _process$env$NEXTAUTH !== void 0 ? _process$env$NEXTAUTH : process.env.VERCEL_URL).origin,\n    basePath: (0, _parseUrl.default)(process.env.NEXTAUTH_URL).path,\n    baseUrlServer: (0, _parseUrl.default)((_ref = (_process$env$NEXTAUTH2 = process.env.NEXTAUTH_URL_INTERNAL) !== null && _process$env$NEXTAUTH2 !== void 0 ? _process$env$NEXTAUTH2 : process.env.NEXTAUTH_URL) !== null && _ref !== void 0 ? _ref : process.env.VERCEL_URL).origin,\n    basePathServer: (0, _parseUrl.default)((_process$env$NEXTAUTH3 = process.env.NEXTAUTH_URL_INTERNAL) !== null && _process$env$NEXTAUTH3 !== void 0 ? _process$env$NEXTAUTH3 : process.env.NEXTAUTH_URL).path,\n    _lastSync: 0,\n    _session: undefined,\n    _getSession: function _getSession() {}\n};\nvar broadcast = (0, _utils.BroadcastChannel)();\nvar logger = (0, _logger2.proxyLogger)(_logger2.default, __NEXTAUTH.basePath);\nfunction useOnline() {\n    var _React$useState = React.useState(typeof navigator !== \"undefined\" ? navigator.onLine : false), _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2), isOnline = _React$useState2[0], setIsOnline = _React$useState2[1];\n    var setOnline = function setOnline() {\n        return setIsOnline(true);\n    };\n    var setOffline = function setOffline() {\n        return setIsOnline(false);\n    };\n    React.useEffect(function() {\n        window.addEventListener(\"online\", setOnline);\n        window.addEventListener(\"offline\", setOffline);\n        return function() {\n            window.removeEventListener(\"online\", setOnline);\n            window.removeEventListener(\"offline\", setOffline);\n        };\n    }, []);\n    return isOnline;\n}\nvar SessionContext = (_React$createContext = React.createContext) === null || _React$createContext === void 0 ? void 0 : _React$createContext.call(React, undefined);\nexports.SessionContext = SessionContext;\nfunction useSession(options) {\n    if (!SessionContext) {\n        throw new Error(\"React Context is unavailable in Server Components\");\n    }\n    var value = React.useContext(SessionContext);\n    if (!value && \"development\" !== \"production\") {\n        throw new Error(\"[next-auth]: `useSession` must be wrapped in a <SessionProvider />\");\n    }\n    var _ref2 = options !== null && options !== void 0 ? options : {}, required = _ref2.required, onUnauthenticated = _ref2.onUnauthenticated;\n    var requiredAndNotLoading = required && value.status === \"unauthenticated\";\n    React.useEffect(function() {\n        if (requiredAndNotLoading) {\n            var url = \"/api/auth/signin?\".concat(new URLSearchParams({\n                error: \"SessionRequired\",\n                callbackUrl: window.location.href\n            }));\n            if (onUnauthenticated) onUnauthenticated();\n            else window.location.href = url;\n        }\n    }, [\n        requiredAndNotLoading,\n        onUnauthenticated\n    ]);\n    if (requiredAndNotLoading) {\n        return {\n            data: value.data,\n            update: value.update,\n            status: \"loading\"\n        };\n    }\n    return value;\n}\nfunction getSession(_x) {\n    return _getSession2.apply(this, arguments);\n}\nfunction _getSession2() {\n    _getSession2 = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee3(params) {\n        var _params$broadcast;\n        var session;\n        return _regenerator.default.wrap(function _callee3$(_context3) {\n            while(1){\n                switch(_context3.prev = _context3.next){\n                    case 0:\n                        _context3.next = 2;\n                        return (0, _utils.fetchData)(\"session\", __NEXTAUTH, logger, params);\n                    case 2:\n                        session = _context3.sent;\n                        if ((_params$broadcast = params === null || params === void 0 ? void 0 : params.broadcast) !== null && _params$broadcast !== void 0 ? _params$broadcast : true) {\n                            broadcast.post({\n                                event: \"session\",\n                                data: {\n                                    trigger: \"getSession\"\n                                }\n                            });\n                        }\n                        return _context3.abrupt(\"return\", session);\n                    case 5:\n                    case \"end\":\n                        return _context3.stop();\n                }\n            }\n        }, _callee3);\n    }));\n    return _getSession2.apply(this, arguments);\n}\nfunction getCsrfToken(_x2) {\n    return _getCsrfToken.apply(this, arguments);\n}\nfunction _getCsrfToken() {\n    _getCsrfToken = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee4(params) {\n        var response;\n        return _regenerator.default.wrap(function _callee4$(_context4) {\n            while(1){\n                switch(_context4.prev = _context4.next){\n                    case 0:\n                        _context4.next = 2;\n                        return (0, _utils.fetchData)(\"csrf\", __NEXTAUTH, logger, params);\n                    case 2:\n                        response = _context4.sent;\n                        return _context4.abrupt(\"return\", response === null || response === void 0 ? void 0 : response.csrfToken);\n                    case 4:\n                    case \"end\":\n                        return _context4.stop();\n                }\n            }\n        }, _callee4);\n    }));\n    return _getCsrfToken.apply(this, arguments);\n}\nfunction getProviders() {\n    return _getProviders.apply(this, arguments);\n}\nfunction _getProviders() {\n    _getProviders = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee5() {\n        return _regenerator.default.wrap(function _callee5$(_context5) {\n            while(1){\n                switch(_context5.prev = _context5.next){\n                    case 0:\n                        _context5.next = 2;\n                        return (0, _utils.fetchData)(\"providers\", __NEXTAUTH, logger);\n                    case 2:\n                        return _context5.abrupt(\"return\", _context5.sent);\n                    case 3:\n                    case \"end\":\n                        return _context5.stop();\n                }\n            }\n        }, _callee5);\n    }));\n    return _getProviders.apply(this, arguments);\n}\nfunction signIn(_x3, _x4, _x5) {\n    return _signIn.apply(this, arguments);\n}\nfunction _signIn() {\n    _signIn = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee6(provider, options, authorizationParams) {\n        var _ref5, _ref5$callbackUrl, callbackUrl, _ref5$redirect, redirect, baseUrl, providers, isCredentials, isEmail, isSupportingReturn, signInUrl, _signInUrl, res, data, _data$url, url, error;\n        return _regenerator.default.wrap(function _callee6$(_context6) {\n            while(1){\n                switch(_context6.prev = _context6.next){\n                    case 0:\n                        _ref5 = options !== null && options !== void 0 ? options : {}, _ref5$callbackUrl = _ref5.callbackUrl, callbackUrl = _ref5$callbackUrl === void 0 ? window.location.href : _ref5$callbackUrl, _ref5$redirect = _ref5.redirect, redirect = _ref5$redirect === void 0 ? true : _ref5$redirect;\n                        baseUrl = (0, _utils.apiBaseUrl)(__NEXTAUTH);\n                        _context6.next = 4;\n                        return getProviders();\n                    case 4:\n                        providers = _context6.sent;\n                        if (providers) {\n                            _context6.next = 8;\n                            break;\n                        }\n                        window.location.href = \"\".concat(baseUrl, \"/error\");\n                        return _context6.abrupt(\"return\");\n                    case 8:\n                        if (!(!provider || !(provider in providers))) {\n                            _context6.next = 11;\n                            break;\n                        }\n                        window.location.href = \"\".concat(baseUrl, \"/signin?\").concat(new URLSearchParams({\n                            callbackUrl: callbackUrl\n                        }));\n                        return _context6.abrupt(\"return\");\n                    case 11:\n                        isCredentials = providers[provider].type === \"credentials\";\n                        isEmail = providers[provider].type === \"email\";\n                        isSupportingReturn = isCredentials || isEmail;\n                        signInUrl = \"\".concat(baseUrl, \"/\").concat(isCredentials ? \"callback\" : \"signin\", \"/\").concat(provider);\n                        _signInUrl = \"\".concat(signInUrl).concat(authorizationParams ? \"?\".concat(new URLSearchParams(authorizationParams)) : \"\");\n                        _context6.t0 = fetch;\n                        _context6.t1 = _signInUrl;\n                        _context6.t2 = {\n                            \"Content-Type\": \"application/x-www-form-urlencoded\"\n                        };\n                        _context6.t3 = URLSearchParams;\n                        _context6.t4 = _objectSpread;\n                        _context6.t5 = _objectSpread({}, options);\n                        _context6.t6 = {};\n                        _context6.next = 25;\n                        return getCsrfToken();\n                    case 25:\n                        _context6.t7 = _context6.sent;\n                        _context6.t8 = callbackUrl;\n                        _context6.t9 = {\n                            csrfToken: _context6.t7,\n                            callbackUrl: _context6.t8,\n                            json: true\n                        };\n                        _context6.t10 = (0, _context6.t4)(_context6.t5, _context6.t6, _context6.t9);\n                        _context6.t11 = new _context6.t3(_context6.t10);\n                        _context6.t12 = {\n                            method: \"post\",\n                            headers: _context6.t2,\n                            body: _context6.t11\n                        };\n                        _context6.next = 33;\n                        return (0, _context6.t0)(_context6.t1, _context6.t12);\n                    case 33:\n                        res = _context6.sent;\n                        _context6.next = 36;\n                        return res.json();\n                    case 36:\n                        data = _context6.sent;\n                        if (!(redirect || !isSupportingReturn)) {\n                            _context6.next = 42;\n                            break;\n                        }\n                        url = (_data$url = data.url) !== null && _data$url !== void 0 ? _data$url : callbackUrl;\n                        window.location.href = url;\n                        if (url.includes(\"#\")) window.location.reload();\n                        return _context6.abrupt(\"return\");\n                    case 42:\n                        error = new URL(data.url).searchParams.get(\"error\");\n                        if (!res.ok) {\n                            _context6.next = 46;\n                            break;\n                        }\n                        _context6.next = 46;\n                        return __NEXTAUTH._getSession({\n                            event: \"storage\"\n                        });\n                    case 46:\n                        return _context6.abrupt(\"return\", {\n                            error: error,\n                            status: res.status,\n                            ok: res.ok,\n                            url: error ? null : data.url\n                        });\n                    case 47:\n                    case \"end\":\n                        return _context6.stop();\n                }\n            }\n        }, _callee6);\n    }));\n    return _signIn.apply(this, arguments);\n}\nfunction signOut(_x6) {\n    return _signOut.apply(this, arguments);\n}\nfunction _signOut() {\n    _signOut = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee7(options) {\n        var _options$redirect;\n        var _ref6, _ref6$callbackUrl, callbackUrl, baseUrl, fetchOptions, res, data, _data$url2, url;\n        return _regenerator.default.wrap(function _callee7$(_context7) {\n            while(1){\n                switch(_context7.prev = _context7.next){\n                    case 0:\n                        _ref6 = options !== null && options !== void 0 ? options : {}, _ref6$callbackUrl = _ref6.callbackUrl, callbackUrl = _ref6$callbackUrl === void 0 ? window.location.href : _ref6$callbackUrl;\n                        baseUrl = (0, _utils.apiBaseUrl)(__NEXTAUTH);\n                        _context7.t0 = {\n                            \"Content-Type\": \"application/x-www-form-urlencoded\"\n                        };\n                        _context7.t1 = URLSearchParams;\n                        _context7.next = 6;\n                        return getCsrfToken();\n                    case 6:\n                        _context7.t2 = _context7.sent;\n                        _context7.t3 = callbackUrl;\n                        _context7.t4 = {\n                            csrfToken: _context7.t2,\n                            callbackUrl: _context7.t3,\n                            json: true\n                        };\n                        _context7.t5 = new _context7.t1(_context7.t4);\n                        fetchOptions = {\n                            method: \"post\",\n                            headers: _context7.t0,\n                            body: _context7.t5\n                        };\n                        _context7.next = 13;\n                        return fetch(\"\".concat(baseUrl, \"/signout\"), fetchOptions);\n                    case 13:\n                        res = _context7.sent;\n                        _context7.next = 16;\n                        return res.json();\n                    case 16:\n                        data = _context7.sent;\n                        broadcast.post({\n                            event: \"session\",\n                            data: {\n                                trigger: \"signout\"\n                            }\n                        });\n                        if (!((_options$redirect = options === null || options === void 0 ? void 0 : options.redirect) !== null && _options$redirect !== void 0 ? _options$redirect : true)) {\n                            _context7.next = 23;\n                            break;\n                        }\n                        url = (_data$url2 = data.url) !== null && _data$url2 !== void 0 ? _data$url2 : callbackUrl;\n                        window.location.href = url;\n                        if (url.includes(\"#\")) window.location.reload();\n                        return _context7.abrupt(\"return\");\n                    case 23:\n                        _context7.next = 25;\n                        return __NEXTAUTH._getSession({\n                            event: \"storage\"\n                        });\n                    case 25:\n                        return _context7.abrupt(\"return\", data);\n                    case 26:\n                    case \"end\":\n                        return _context7.stop();\n                }\n            }\n        }, _callee7);\n    }));\n    return _signOut.apply(this, arguments);\n}\nfunction SessionProvider(props) {\n    if (!SessionContext) {\n        throw new Error(\"React Context is unavailable in Server Components\");\n    }\n    var children = props.children, basePath = props.basePath, refetchInterval = props.refetchInterval, refetchWhenOffline = props.refetchWhenOffline;\n    if (basePath) __NEXTAUTH.basePath = basePath;\n    var hasInitialSession = props.session !== undefined;\n    __NEXTAUTH._lastSync = hasInitialSession ? (0, _utils.now)() : 0;\n    var _React$useState3 = React.useState(function() {\n        if (hasInitialSession) __NEXTAUTH._session = props.session;\n        return props.session;\n    }), _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2), session = _React$useState4[0], setSession = _React$useState4[1];\n    var _React$useState5 = React.useState(!hasInitialSession), _React$useState6 = (0, _slicedToArray2.default)(_React$useState5, 2), loading = _React$useState6[0], setLoading = _React$useState6[1];\n    React.useEffect(function() {\n        __NEXTAUTH._getSession = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee() {\n            var _ref4, event, storageEvent, _args = arguments;\n            return _regenerator.default.wrap(function _callee$(_context) {\n                while(1){\n                    switch(_context.prev = _context.next){\n                        case 0:\n                            _ref4 = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, event = _ref4.event;\n                            _context.prev = 1;\n                            storageEvent = event === \"storage\";\n                            if (!(storageEvent || __NEXTAUTH._session === undefined)) {\n                                _context.next = 10;\n                                break;\n                            }\n                            __NEXTAUTH._lastSync = (0, _utils.now)();\n                            _context.next = 7;\n                            return getSession({\n                                broadcast: !storageEvent\n                            });\n                        case 7:\n                            __NEXTAUTH._session = _context.sent;\n                            setSession(__NEXTAUTH._session);\n                            return _context.abrupt(\"return\");\n                        case 10:\n                            if (!(!event || __NEXTAUTH._session === null || (0, _utils.now)() < __NEXTAUTH._lastSync)) {\n                                _context.next = 12;\n                                break;\n                            }\n                            return _context.abrupt(\"return\");\n                        case 12:\n                            __NEXTAUTH._lastSync = (0, _utils.now)();\n                            _context.next = 15;\n                            return getSession();\n                        case 15:\n                            __NEXTAUTH._session = _context.sent;\n                            setSession(__NEXTAUTH._session);\n                            _context.next = 22;\n                            break;\n                        case 19:\n                            _context.prev = 19;\n                            _context.t0 = _context[\"catch\"](1);\n                            logger.error(\"CLIENT_SESSION_ERROR\", _context.t0);\n                        case 22:\n                            _context.prev = 22;\n                            setLoading(false);\n                            return _context.finish(22);\n                        case 25:\n                        case \"end\":\n                            return _context.stop();\n                    }\n                }\n            }, _callee, null, [\n                [\n                    1,\n                    19,\n                    22,\n                    25\n                ]\n            ]);\n        }));\n        __NEXTAUTH._getSession();\n        return function() {\n            __NEXTAUTH._lastSync = 0;\n            __NEXTAUTH._session = undefined;\n            __NEXTAUTH._getSession = function() {};\n        };\n    }, []);\n    React.useEffect(function() {\n        var unsubscribe = broadcast.receive(function() {\n            return __NEXTAUTH._getSession({\n                event: \"storage\"\n            });\n        });\n        return function() {\n            return unsubscribe();\n        };\n    }, []);\n    React.useEffect(function() {\n        var _props$refetchOnWindo = props.refetchOnWindowFocus, refetchOnWindowFocus = _props$refetchOnWindo === void 0 ? true : _props$refetchOnWindo;\n        var visibilityHandler = function visibilityHandler() {\n            if (refetchOnWindowFocus && document.visibilityState === \"visible\") __NEXTAUTH._getSession({\n                event: \"visibilitychange\"\n            });\n        };\n        document.addEventListener(\"visibilitychange\", visibilityHandler, false);\n        return function() {\n            return document.removeEventListener(\"visibilitychange\", visibilityHandler, false);\n        };\n    }, [\n        props.refetchOnWindowFocus\n    ]);\n    var isOnline = useOnline();\n    var shouldRefetch = refetchWhenOffline !== false || isOnline;\n    React.useEffect(function() {\n        if (refetchInterval && shouldRefetch) {\n            var refetchIntervalTimer = setInterval(function() {\n                if (__NEXTAUTH._session) {\n                    __NEXTAUTH._getSession({\n                        event: \"poll\"\n                    });\n                }\n            }, refetchInterval * 1000);\n            return function() {\n                return clearInterval(refetchIntervalTimer);\n            };\n        }\n    }, [\n        refetchInterval,\n        shouldRefetch\n    ]);\n    var value = React.useMemo(function() {\n        return {\n            data: session,\n            status: loading ? \"loading\" : session ? \"authenticated\" : \"unauthenticated\",\n            update: function update(data) {\n                return (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee2() {\n                    var newSession;\n                    return _regenerator.default.wrap(function _callee2$(_context2) {\n                        while(1){\n                            switch(_context2.prev = _context2.next){\n                                case 0:\n                                    if (!(loading || !session)) {\n                                        _context2.next = 2;\n                                        break;\n                                    }\n                                    return _context2.abrupt(\"return\");\n                                case 2:\n                                    setLoading(true);\n                                    _context2.t0 = _utils.fetchData;\n                                    _context2.t1 = __NEXTAUTH;\n                                    _context2.t2 = logger;\n                                    _context2.next = 8;\n                                    return getCsrfToken();\n                                case 8:\n                                    _context2.t3 = _context2.sent;\n                                    _context2.t4 = data;\n                                    _context2.t5 = {\n                                        csrfToken: _context2.t3,\n                                        data: _context2.t4\n                                    };\n                                    _context2.t6 = {\n                                        body: _context2.t5\n                                    };\n                                    _context2.t7 = {\n                                        req: _context2.t6\n                                    };\n                                    _context2.next = 15;\n                                    return (0, _context2.t0)(\"session\", _context2.t1, _context2.t2, _context2.t7);\n                                case 15:\n                                    newSession = _context2.sent;\n                                    setLoading(false);\n                                    if (newSession) {\n                                        setSession(newSession);\n                                        broadcast.post({\n                                            event: \"session\",\n                                            data: {\n                                                trigger: \"getSession\"\n                                            }\n                                        });\n                                    }\n                                    return _context2.abrupt(\"return\", newSession);\n                                case 19:\n                                case \"end\":\n                                    return _context2.stop();\n                            }\n                        }\n                    }, _callee2);\n                }))();\n            }\n        };\n    }, [\n        session,\n        loading\n    ]);\n    return (0, _jsxRuntime.jsx)(SessionContext.Provider, {\n        value: value,\n        children: children\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next-auth/react/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/next-auth/react/types.js":
/*!***********************************************!*\
  !*** ./node_modules/next-auth/react/types.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL3JlYWN0L3R5cGVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWJBLDhDQUE2QztJQUMzQ0csT0FBTztBQUNULENBQUMsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2hhbG9jaGF0Ly4vbm9kZV9tb2R1bGVzL25leHQtYXV0aC9yZWFjdC90eXBlcy5qcz8xZTVhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pOyJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next-auth/react/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/next-auth/utils/logger.js":
/*!************************************************!*\
  !*** ./node_modules/next-auth/utils/logger.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(ssr)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = void 0;\nexports.proxyLogger = proxyLogger;\nexports.setLogger = setLogger;\nvar _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/defineProperty.js\"));\nvar _errors = __webpack_require__(/*! ../core/errors */ \"(ssr)/./node_modules/next-auth/core/errors.js\");\nfunction ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(object);\n        enumerableOnly && (symbols = symbols.filter(function(sym) {\n            return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        })), keys.push.apply(keys, symbols);\n    }\n    return keys;\n}\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = null != arguments[i] ? arguments[i] : {};\n        i % 2 ? ownKeys(Object(source), !0).forEach(function(key) {\n            (0, _defineProperty2.default)(target, key, source[key]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n    }\n    return target;\n}\nfunction formatError(o) {\n    if (o instanceof Error && !(o instanceof _errors.UnknownError)) {\n        return {\n            message: o.message,\n            stack: o.stack,\n            name: o.name\n        };\n    }\n    if (hasErrorProperty(o)) {\n        var _o$message;\n        o.error = formatError(o.error);\n        o.message = (_o$message = o.message) !== null && _o$message !== void 0 ? _o$message : o.error.message;\n    }\n    return o;\n}\nfunction hasErrorProperty(x) {\n    return !!(x !== null && x !== void 0 && x.error);\n}\nvar _logger = {\n    error: function error(code, metadata) {\n        metadata = formatError(metadata);\n        console.error(\"[next-auth][error][\".concat(code, \"]\"), \"\\nhttps://next-auth.js.org/errors#\".concat(code.toLowerCase()), metadata.message, metadata);\n    },\n    warn: function warn(code) {\n        console.warn(\"[next-auth][warn][\".concat(code, \"]\"), \"\\nhttps://next-auth.js.org/warnings#\".concat(code.toLowerCase()));\n    },\n    debug: function debug(code, metadata) {\n        console.log(\"[next-auth][debug][\".concat(code, \"]\"), metadata);\n    }\n};\nfunction setLogger() {\n    var newLogger = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var debug = arguments.length > 1 ? arguments[1] : undefined;\n    if (!debug) _logger.debug = function() {};\n    if (newLogger.error) _logger.error = newLogger.error;\n    if (newLogger.warn) _logger.warn = newLogger.warn;\n    if (newLogger.debug) _logger.debug = newLogger.debug;\n}\nvar _default = _logger;\nexports[\"default\"] = _default;\nfunction proxyLogger() {\n    var logger = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _logger;\n    var basePath = arguments.length > 1 ? arguments[1] : undefined;\n    try {\n        if (true) {\n            return logger;\n        }\n        var clientLogger = {};\n        var _loop = function _loop(level) {\n            clientLogger[level] = function(code, metadata) {\n                _logger[level](code, metadata);\n                if (level === \"error\") {\n                    metadata = formatError(metadata);\n                }\n                ;\n                metadata.client = true;\n                var url = \"\".concat(basePath, \"/_log\");\n                var body = new URLSearchParams(_objectSpread({\n                    level: level,\n                    code: code\n                }, metadata));\n                if (navigator.sendBeacon) {\n                    return navigator.sendBeacon(url, body);\n                }\n                return fetch(url, {\n                    method: \"POST\",\n                    body: body,\n                    keepalive: true\n                });\n            };\n        };\n        for(var level in logger){\n            _loop(level);\n        }\n        return clientLogger;\n    } catch (_unused) {\n        return _logger;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next-auth/utils/logger.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/next-auth/utils/parse-url.js":
/*!***************************************************!*\
  !*** ./node_modules/next-auth/utils/parse-url.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = parseUrl;\nfunction parseUrl(url) {\n    var _url2;\n    const defaultUrl = new URL(\"http://localhost:3000/api/auth\");\n    if (url && !url.startsWith(\"http\")) {\n        url = `https://${url}`;\n    }\n    const _url = new URL((_url2 = url) !== null && _url2 !== void 0 ? _url2 : defaultUrl);\n    const path = (_url.pathname === \"/\" ? defaultUrl.pathname : _url.pathname).replace(/\\/$/, \"\");\n    const base = `${_url.origin}${path}`;\n    return {\n        origin: _url.origin,\n        host: _url.host,\n        path,\n        base,\n        toString: ()=>base\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL3V0aWxzL3BhcnNlLXVybC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUViQSw4Q0FBNkM7SUFDM0NHLE9BQU87QUFDVCxDQUFDLEVBQUM7QUFDRkQsa0JBQWUsR0FBR0c7QUFFbEIsU0FBU0EsU0FBU0MsR0FBRztJQUNuQixJQUFJQztJQUVKLE1BQU1DLGFBQWEsSUFBSUMsSUFBSTtJQUUzQixJQUFJSCxPQUFPLENBQUNBLElBQUlJLFVBQVUsQ0FBQyxTQUFTO1FBQ2xDSixNQUFNLENBQUMsUUFBUSxFQUFFQSxJQUFJLENBQUM7SUFDeEI7SUFFQSxNQUFNSyxPQUFPLElBQUlGLElBQUksQ0FBQ0YsUUFBUUQsR0FBRSxNQUFPLFFBQVFDLFVBQVUsS0FBSyxJQUFJQSxRQUFRQztJQUUxRSxNQUFNSSxPQUFPLENBQUNELEtBQUtFLFFBQVEsS0FBSyxNQUFNTCxXQUFXSyxRQUFRLEdBQUdGLEtBQUtFLFFBQVEsRUFBRUMsT0FBTyxDQUFDLE9BQU87SUFDMUYsTUFBTUMsT0FBTyxDQUFDLEVBQUVKLEtBQUtLLE1BQU0sQ0FBQyxFQUFFSixLQUFLLENBQUM7SUFDcEMsT0FBTztRQUNMSSxRQUFRTCxLQUFLSyxNQUFNO1FBQ25CQyxNQUFNTixLQUFLTSxJQUFJO1FBQ2ZMO1FBQ0FHO1FBQ0FHLFVBQVUsSUFBTUg7SUFDbEI7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2hhbG9jaGF0Ly4vbm9kZV9tb2R1bGVzL25leHQtYXV0aC91dGlscy9wYXJzZS11cmwuanM/YzMzOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHBhcnNlVXJsO1xuXG5mdW5jdGlvbiBwYXJzZVVybCh1cmwpIHtcbiAgdmFyIF91cmwyO1xuXG4gIGNvbnN0IGRlZmF1bHRVcmwgPSBuZXcgVVJMKFwiaHR0cDovL2xvY2FsaG9zdDozMDAwL2FwaS9hdXRoXCIpO1xuXG4gIGlmICh1cmwgJiYgIXVybC5zdGFydHNXaXRoKFwiaHR0cFwiKSkge1xuICAgIHVybCA9IGBodHRwczovLyR7dXJsfWA7XG4gIH1cblxuICBjb25zdCBfdXJsID0gbmV3IFVSTCgoX3VybDIgPSB1cmwpICE9PSBudWxsICYmIF91cmwyICE9PSB2b2lkIDAgPyBfdXJsMiA6IGRlZmF1bHRVcmwpO1xuXG4gIGNvbnN0IHBhdGggPSAoX3VybC5wYXRobmFtZSA9PT0gXCIvXCIgPyBkZWZhdWx0VXJsLnBhdGhuYW1lIDogX3VybC5wYXRobmFtZSkucmVwbGFjZSgvXFwvJC8sIFwiXCIpO1xuICBjb25zdCBiYXNlID0gYCR7X3VybC5vcmlnaW59JHtwYXRofWA7XG4gIHJldHVybiB7XG4gICAgb3JpZ2luOiBfdXJsLm9yaWdpbixcbiAgICBob3N0OiBfdXJsLmhvc3QsXG4gICAgcGF0aCxcbiAgICBiYXNlLFxuICAgIHRvU3RyaW5nOiAoKSA9PiBiYXNlXG4gIH07XG59Il0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVmYXVsdCIsInBhcnNlVXJsIiwidXJsIiwiX3VybDIiLCJkZWZhdWx0VXJsIiwiVVJMIiwic3RhcnRzV2l0aCIsIl91cmwiLCJwYXRoIiwicGF0aG5hbWUiLCJyZXBsYWNlIiwiYmFzZSIsIm9yaWdpbiIsImhvc3QiLCJ0b1N0cmluZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next-auth/utils/parse-url.js\n");

/***/ })

};
;